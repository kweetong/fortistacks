#!/bin/bash -ex
#
#    fortinet deploy-manager
#    Copyright (C) 2016 Fortinet  Ltd.
#
#    Authors: Nicolas Thomss  <nthomasfortinet.com>
#
#    This program is free software: you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation, version 3 of the License.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with this program.  If not, see <http://www.gnu.org/licenses/>.


# Assume there is a default keypair a mgmt network and floating ip enabled.
# Assume you have openstack cli and cfy installed.

# checking openstack cli is recent enough using sort -V .

#check the docker image from here:http://repository.cloudifysource.org/cloudify/4.3.2/ga-release/cloudify-docker-manager-4.3.2ga.tar

OSCLI_VER=`openstack --version 2>&1 | sed -e "s/openstack //g"`
read -r -d '' VAR << EOM || true
3.0
$OSCLI_VER
EOM

CHECKED_VER=`echo "$VAR" | sort -V|tail -1`

if [ "$CHECKED_VER" == "3.0" ]; then
    echo "please upgrade python-openstackclient to a newer version"
    exit 2
fi

#if nova access not set then get them from nova.rc
if [ -x $OS_AUTH_URL ]; then
  echo "get the Openstack access from ~/nova.rc"
  . ~/nova.rc
fi

#if EXT_NET variable not set use default (allow to have it as param from the .rc file)
[ -x $EXT_NET ] && EXT_NET=ext-net
[ -x $OS_FLAVOR_CFY ] && OS_FLAVOR_CFY=2C-4GB-50GB
#Follow http://docs.getcloudify.org/
export LC_ALL=C
PKGS=" python-pip python-virtualenv wget git"
dpkg -l $PKGS > /dev/null || sudo apt install -y $PKGS
# if already install do nothing
CFY_VERSION="19.01.24"
[ -f cloudify-cli-community-$CFY_VERSION.deb ] || wget -c http://repository.cloudifysource.org/cloudify/$CFY_VERSION/community-release/cloudify-cli-community-$CFY_VERSION.deb
sudo dpkg -i cloudify-cli-community-$CFY_VERSION.deb

# Will now use the package rpm on centos ..
#
CentOSImageID=`openstack image list --format value -c ID -c Name |grep "CentOS 7"|head -1|awk '{print $1}'`

if (openstack server show cfy-manager-$CFY_VERSION  > /dev/null 2>&1 );then
    echo "cloudify manager already started"
    #get the floating-ip from openstack and trim result
    FLOAT_IP=`openstack server show cfy-manager-$CFY_VERSION -f value -c addresses|awk -F , '{print $2}'|sed 's/ //g'`
else
    #check the fingerprint are equal (will work if not existant)
    OSKEY_FPRINT=`openstack keypair show cloudify -f value -c fingerprint|| echo "none"`
    KEY_FRPINT=`(ssh-keygen -E md5 -lf cloudify-key.pub || echo "MD5:false" ) |awk -F " |MD5:" '{print $3}'`
    if [ "$OSKEY_FPRINT" != "$KEY_FRPINT" ] || [ ! -f cloudify-key ]
        then
        #Create a new key upload public and private to cloudify .never put your real private keys on a cloud.
        rm -rf ./cloudify-key ./cloudify-key.pub
        ssh-keygen -t ecdsa -b 521 -N "" -C "key for cloudify manager/agents" -f ./cloudify-key
        openstack keypair delete cloudify || true
        openstack keypair create --public-key cloudify-key.pub cloudify
        fi
    openstack server create  --image $CentOSImageID cfy-manager-$CFY_VERSION --key-name cloudify --security-group default --flavor $OS_FLAVOR_CFY --network mgmt
    while [ `openstack server show cfy-manager-$CFY_VERSION -f value -c status` == "BUILD" ]; do
	sleep 4
    done
    # wait for the keys etc to propagate
    sleep 8
    FLOAT_IP=`openstack  floating ip create $EXT_NET -f value -c floating_ip_address`
    openstack server add floating ip cfy-manager-$CFY_VERSION $FLOAT_IP
fi
SSH="ssh -t -i cloudify-key -o StrictHostKeyChecking=no centos@$FLOAT_IP"
until ($SSH ping -c 3 cloudify.co); do
sleep 4
echo "waiting the vm to be up"
done


### Install from rpm
$SSH sudo yum install -y openssl-1.0.2k wget gcc python-devel
$SSH sudo yum upgrade -y
$SSH "(rpm -q cloudify-manager-install)|| sudo yum install -y http://repository.cloudifysource.org/cloudify/$CFY_VERSION/community-release/cloudify-manager-install-community-$CFY_VERSION.rpm"

privateip=`openstack server show cfy-manager-$CFY_VERSION -f value -c addresses|awk -F "=|," '{print $2}'|sed 's/ //g'`
#Copy the ssh key private key to the manager.
scp -i cloudify-key -o StrictHostKeyChecking=no ./cloudify-key  centos@$FLOAT_IP:
$SSH  sudo cp ./cloudify-key /etc/cloudify/ssh_key
## disable validation and sanity that fails
$SSH " sudo sed -i -e 's/skip_validations: false/skip_validations: true/' /etc/cloudify/config.yaml"
#$SSH " sudo sed -i -e 's/skip_sanity: false/skip_sanity: true/' /etc/cloudify/config.yaml"

#$SSH "[ -f /etc/cloudify/.install ] ||sudo -i cfy_manager install --private-ip $privateip --public-ip $FLOAT_IP   -a fortinet --clean-db"
$SSH "[ -f /etc/cloudify/.install ] ||sudo -i cfy_manager install --private-ip $FLOAT_IP --public-ip $FLOAT_IP   -a fortinet --clean-db"
#$SSH sudo chown cfyuser:cfyuser /etc/cloudify/ssh_key
# todo setup multiple networks for agents to use mgmt IPs

# change the default openstack config to use the one currently on.
envsubst < openstack_configv3.template > openstack_config.json
scp -i cloudify-key -o StrictHostKeyChecking=no   openstack_config.json centos@$FLOAT_IP:
$SSH  sudo mv openstack_config.json /etc/cloudify/openstack_config.json
cfy init -r
#Colors in the logs
sed -i 's/colors: false/colors: true/g' $HOME/.cloudify/config.yaml
cfy profiles use $FLOAT_IP -u admin -p fortinet -t default_tenant

$SSH sudo cfy plugins  bundle-upload
# upload to secret in cloudify used by agents
# workaround as last version of openstack plugin do not handle port correctly
OS_PLUGIN_VER=2.14.7
# $SSH wget -c http://www.getcloudify.org/spec/openstack-plugin/$OS_PLUGIN_VER/plugin.yaml
# $SSH wget -c https://github.com/cloudify-cosmo/cloudify-openstack-plugin/releases/download/$OS_PLUGIN_VER/cloudify_openstack_plugin-$OS_PLUGIN_VER-py27-none-linux_x86_64-centos-Core.wgn
# $SSH sudo cfy plugin upload cloudify_openstack_plugin-$OS_PLUGIN_VER-py27-none-linux_x86_64-centos-Core.wgn -y plugin.yaml
cfy status
echo "if any of the following fails it means you already set it up, ignore"
cfy secret create agent_key_private -f cloudify-key
cfy secret create agent_key_public -f cloudify-key.pub

# adding the openstack credential as secret to ease working with some Cloudify blueprints
cfy  secret create  keystone_username -s $OS_USERNAME
cfy  secret create  keystone_password -s $OS_PASSWORD
cfy  secret create  keystone_project_name -s $OS_PROJECT_NAME
cfy  secret create  keystone_url -s $OS_AUTH_URL
cfy  secret create  keystone_domain -s $OS_PROJECT_DOMAIN_NAME
cfy  secret create  region -s $OS_REGION_NAME
cfy secret create cloudify-key-private -f ./cloudify-key
cfy secret create cloudify-key -f ./cloudify-key.pub
cfy status

